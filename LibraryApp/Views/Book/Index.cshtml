@*@model IEnumerable<LibraryApp.Models.Book>
*@
@{
	ViewData["Title"] = "Books";
}
<style>
	.swal2-confirm {
		background-color: blue !important;
		color: white !important;
	}


	.swal2-deny {
		background-color: blue !important;
		color: white !important;
	}
</style>
<h1>Books</h1>

<p>
	<a asp-action="Create">Create New</a>
</p>
<table class="table" id="IndxTbl">
	<thead>
		<tr>
			<th>
				ISBN
			</th>
			<th>
				Title
			</th>
			<th>
				Author
			</th>
			<th>
				Id_Section
			</th>
			<th>
				Image
			</th>
			<th>
				Group_Id
			</th>
			<th></th>
		</tr>
	</thead>

</table>
@section Scripts{
	<script>
		var table = $('#IndxTbl').DataTable({
			ajax: {
				url: '@Url.Action("GetAll", "Book")',
				dataSrc: '',
			},
			columns: [
				{ data: "isbn", autoWidth: true },
				{ data: "title", autoWidth: true },
				{ data: "author", autoWidth: true },
				{ data: "id_Section", autoWidth: true },
				{
					data: "image",
					render: function (data) {
						return `<img src="/booksImages/${data}" width="50px" height="50px" />`
					},
				},
				{ data: "group_Id", autoWidth: true },
				{
					data: "id_Book",
					render: function (data) {
						return `<button class="btn btn-secondary" onclick="SAlert(${data})">Edit</button>
											<a class="btn btn-info" href="/Book/Details/${data}">Details</a>
											<a class="btn-danger btn" href="/Book/Delete/${data}">Delete</a>`
					},
					autoWidth: true
				}
			],
		});
		//-------------------------
		function SAlert(id) {
			Swal.fire({
				title: 'Select the option to edit',
				showDenyButton: true,
				showCancelButton: true,
				confirmButtonText: `Edit ISBN`,
				denyButtonText: `Edit other data`,
				cancelButtonText: `Cancel`,
			}).then((result) => {
				/* handle button click events */
				if (result.isConfirmed) {
					// User clicked the "ISBN" button
					window.location.href = "@Url.Action("Edit","Book")" + "?id=" + id + "&option=1";
				} else if (result.isDenied) {
					// User clicked the "Other data" button
					window.location.href = "@Url.Action("Edit","Book")" + "?id=" + id + "&option=0";
				} else if (result.isDismissed) {
					// User clicked the "Cancel" button or clicked outside the modal

				}
			});
		}
		//-------------*------------
		// Signal R
		let connection = new signalR.HubConnectionBuilder().withUrl("/signalrhub", {
			skipNegotiation: true,
			transport: signalR.HttpTransportType.WebSockets
		}).build();

		connection.start()
			.then(function () {
				console.log('connection started');
			})
			.catch(error => {
				console.error(error.message);
			});

		connection.on(("BookModConnection"), function () {
			table.ajax.reload();
			toastr.options = {
				"closeButton": true,
				"debug": false,
				"newestOnTop": true,
				"progressBar": true,
				"positionClass": "toast-bottom-right",
				"preventDuplicates": false,
				"onclick": null,
				"showDuration": "300",
				"hideDuration": "1000",
				"timeOut": "10000",
				"extendedTimeOut": "5000",
				"showEasing": "swing",
				"hideEasing": "linear",
				"showMethod": "fadeIn",
				"hideMethod": "fadeOut"
			}
			toastr["info"]("", "New changes have been made")


		});
	</script>
}
